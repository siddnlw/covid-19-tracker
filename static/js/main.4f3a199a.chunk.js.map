{"version":3,"sources":["logo.svg","data.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Data","props","state","covidData","sortBy","type","totalConfirmedCases","totalNewConfirmed","totalRecovered","totalNewRecovered","totalNewDeceased","totalDeceased","orderData","key","covidArray","sort","a","b","setState","fetch","then","response","json","confirmedCases","newConfirmed","newRecovered","newDeceased","activeCases","deceased","recovered","district","push","catch","err","console","log","style","marginLeft","marginRight","fontSize","display","justifyContent","fontWeight","textAlign","this","color","Table","responsive","striped","bordered","hover","variant","window","matchMedia","matches","border","cursor","onClick","className","map","x","index","backgroundColor","React","Component","Header","App","minHeight","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4f3a199a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { Table } from \"react-bootstrap\";\nimport React from \"react\";\n\nclass Data extends React.Component {\n  state = {\n    covidData: [],\n    sortBy: \"\",\n    type: \"asc\",\n    totalConfirmedCases: \"\",\n    totalNewConfirmed: \"\",\n    totalRecovered: \"\",\n    totalNewRecovered: \"\",\n    totalNewDeceased: \"\",\n    totalDeceased: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n    fetch(\"https://api.covid19india.org/state_district_wise.json\")\n      .then((response) => response.json())\n      .then((json) => {\n        let totalConfirmedCases = 0;\n        let totalNewConfirmed = 0;\n        let totalRecovered = 0;\n        let totalNewRecovered = 0;\n        let totalDeceased = 0;\n        let totalNewDeceased = 0;\n        let covidArray = [];\n        for (const state in json) {\n          if (state == \"State Unassigned\") continue;\n          let confirmedCases = 0;\n          let newConfirmed = 0;\n          let newRecovered = 0;\n          let newDeceased = 0;\n          let activeCases = 0;\n          let deceased = 0;\n          let recovered = 0;\n          for (const district in json[state][\"districtData\"]) {\n            confirmedCases +=\n              json[state][\"districtData\"][district][\"confirmed\"];\n            totalConfirmedCases += confirmedCases;\n\n            newConfirmed +=\n              json[state][\"districtData\"][district][\"delta\"][\"confirmed\"];\n            totalNewConfirmed += newConfirmed;\n\n            newRecovered +=\n              json[state][\"districtData\"][district][\"delta\"][\"recovered\"];\n            totalNewRecovered += newRecovered;\n\n            newDeceased +=\n              json[state][\"districtData\"][district][\"delta\"][\"deceased\"];\n            totalNewDeceased += newDeceased;\n\n            activeCases += json[state][\"districtData\"][district][\"active\"];\n\n            deceased += json[state][\"districtData\"][district][\"deceased\"];\n            totalDeceased += deceased;\n\n            recovered += json[state][\"districtData\"][district][\"recovered\"];\n            totalRecovered += recovered;\n          }\n          covidArray.push({\n            state,\n            confirmedCases,\n            activeCases,\n            recovered,\n            deceased,\n            newConfirmed,\n            newRecovered,\n            newDeceased,\n          });\n        }\n        this.setState({\n          covidData: covidArray,\n          totalConfirmedCases: totalConfirmedCases,\n          totalNewConfirmed: totalNewConfirmed,\n          totalRecovered: totalRecovered,\n          totalNewRecovered: totalNewRecovered,\n          totalNewDeceased: totalNewDeceased,\n          totalDeceased: totalDeceased,\n        });\n        this.orderData(\"state\");\n      })\n      .catch((err) => console.log(err));\n  }\n\n  orderData = (key) => {\n    let type = this.state.type;\n    if (key == this.state.sortBy) type = type == \"desc\" ? \"asc\" : \"desc\";\n    let covidArray = this.state.covidData;\n    covidArray.sort((a, b) => {\n      if (a[key] > b[key]) return type == \"asc\" ? 1 : -1;\n      if (a[key] < b[key]) return type == \"asc\" ? -1 : 1;\n      return 0;\n    });\n    this.setState({ covidData: covidArray, sortBy: key, type });\n  };\n\n  render() {\n    return (\n      <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n        <div\n          style={{\n            fontSize: \"1.3em\",\n            display: \"flex\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <div>\n            <span style={{ fontWeight: 900 }}>Confirmed Cases - </span>\n            <span style={{ textAlign: \"right\" }}>\n              {this.state.totalConfirmedCases}\n              <div style={{ color: \"red\" }}>\n                + {this.state.totalNewConfirmed}\n              </div>\n            </span>\n          </div>\n          <div>\n            <span style={{ fontWeight: 900 }}>Recovered Cases - </span>\n            <span style={{ textAlign: \"right\" }}>\n              {this.state.totalRecovered}\n              <div style={{ color: \"green\" }}>\n                + {this.state.totalNewRecovered}\n              </div>\n            </span>\n          </div>\n          <div>\n            <span style={{ fontWeight: 900 }}>Deaths - </span>\n            <span style={{ textAlign: \"right\" }}>\n              {this.state.totalDeceased}\n              <div style={{ color: \"#898988\" }}>\n                + {this.state.totalNewDeceased}\n              </div>\n            </span>\n          </div>\n        </div>\n\n        <Table\n          responsive\n          striped\n          bordered\n          hover\n          variant={\n            window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n              ? \"dark\"\n              : \"light\"\n          }\n          style={{\n            border: \"2px solid white\",\n          }}\n        >\n          <thead>\n            <tr>\n              <th>List Number</th>\n              <th\n                style={{ cursor: \"pointer\" }}\n                onClick={() => this.orderData(\"state\")}\n              >\n                State{\" \"}\n                {this.state.sortBy == \"state\" ? (\n                  this.state.type == \"asc\" ? (\n                    <span style={{ fontSize: \"1.3em\" }}>&darr;</span>\n                  ) : (\n                    <span style={{ fontSize: \"1.3em\" }}>&uarr;</span>\n                  )\n                ) : (\n                  \"\"\n                )}\n              </th>\n              <th\n                className=\"confirmed\"\n                onClick={() => this.orderData(\"confirmedCases\")}\n              >\n                Confirmed Cases{\" \"}\n                {this.state.sortBy == \"confirmedCases\" ? (\n                  this.state.type == \"asc\" ? (\n                    <span style={{ fontSize: \"1.3em\" }}>&darr;</span>\n                  ) : (\n                    <span style={{ fontSize: \"1.3em\" }}>&uarr;</span>\n                  )\n                ) : (\n                  \"\"\n                )}\n              </th>\n              <th\n                className=\"active\"\n                onClick={() => this.orderData(\"activeCases\")}\n              >\n                Active Cases{\" \"}\n                {this.state.sortBy == \"activeCases\" ? (\n                  this.state.type == \"asc\" ? (\n                    <span style={{ fontSize: \"1.3em\" }}>&darr;</span>\n                  ) : (\n                    <span style={{ fontSize: \"1.3em\" }}>&uarr;</span>\n                  )\n                ) : (\n                  \"\"\n                )}\n              </th>\n              <th\n                className=\"recovered\"\n                onClick={() => this.orderData(\"recovered\")}\n              >\n                Recovered Cases{\" \"}\n                {this.state.sortBy == \"recovered\" ? (\n                  this.state.type == \"asc\" ? (\n                    <span style={{ fontSize: \"1.3em\" }}>&darr;</span>\n                  ) : (\n                    <span style={{ fontSize: \"1.3em\" }}>&uarr;</span>\n                  )\n                ) : (\n                  \"\"\n                )}\n              </th>\n              <th className=\"death\" onClick={() => this.orderData(\"deceased\")}>\n                Deaths{\" \"}\n                {this.state.sortBy == \"deceased\" ? (\n                  this.state.type == \"asc\" ? (\n                    <span style={{ fontSize: \"1.3em\" }}>&darr;</span>\n                  ) : (\n                    <span style={{ fontSize: \"1.3em\" }}>&uarr;</span>\n                  )\n                ) : (\n                  \"\"\n                )}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.covidData.map((x, index) => {\n              return (\n                <tr>\n                  <td>{index + 1}</td>\n                  <td>{x[\"state\"]}</td>\n                  <td\n                    style={{\n                      backgroundColor:\n                        this.state.sortBy == \"confirmedCases\"\n                          ? index % 2 == 0\n                            ? \"#e2837a\"\n                            : \"#E36A57 \"\n                          : \"transparent\",\n                    }}\n                  >\n                    <div style={{ color: \"#BD3427\", fontSize: \"0.8em\" }}>\n                      +{x[\"newConfirmed\"]}\n                    </div>\n                    {x[\"confirmedCases\"]}{\" \"}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor:\n                        this.state.sortBy == \"activeCases\"\n                          ? index % 2 == 0\n                            ? \"#49CEFC\"\n                            : \"#3FBAE7 \"\n                          : \"transparent\",\n                    }}\n                  >\n                    {x[\"activeCases\"]}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor:\n                        this.state.sortBy == \"recovered\"\n                          ? index % 2 == 0\n                            ? \"#a6c47d\"\n                            : \"#65c24d \"\n                          : \"transparent\",\n                    }}\n                  >\n                    <div style={{ color: \"green\", fontSize: \"0.8em\" }}>\n                      +{x[\"newRecovered\"]}\n                    </div>\n                    {x[\"recovered\"]}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor:\n                        this.state.sortBy == \"deceased\"\n                          ? index % 2 == 0\n                            ? \"#C9CACC\"\n                            : \"#A3A5A8 \"\n                          : \"transparent\",\n                    }}\n                  >\n                    <div style={{ color: \"black\", fontSize: \"0.8em\" }}>\n                      +{x[\"newDeceased\"]}\n                    </div>\n                    {x[\"deceased\"]}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\nexport default Data;\n","import React from \"react\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1 style={{ textAlign: \"center\" }} className=\"elegantshadow\">\n          {\" \"}\n          COVID-19 India Stats\n        </h1>\n      </div>\n    );\n  }\n}\nexport default Header;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Data from \"./data\";\nimport Header from \"./Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div style={{ backgroundColor: \"#E7E5E4\", minHeight: \"100vh\" }}>\n        <Header></Header>\n        <Data></Data>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}